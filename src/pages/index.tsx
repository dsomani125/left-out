import Head from 'next/head';
import Tabs from '~/modules/home/components/Tabs';
import styled from 'styled-components';
import { DummyFeedList } from '~/modules/home/utils';
import { Fragment, useEffect, useState } from 'react';
import TravelPostCard from '~/components/TravelPostCard';
import AddIcon from '@mui/icons-material/Add';
import { useRouter } from 'next/router';
import { BottomDrawer } from '~/components/BottomDrawer';
import CreatePost from '~/modules/home/components/CreatePost';
import UseDeviceWidth from '~/hooks/use-device-width';
import { Modal, useModal } from '@nextui-org/react';

export default function Home() {
	const router = useRouter();
	const [openBottomDrawer, setOpenBottomDrawer] = useState<boolean>(false);
	const [isMobile, setIsMobile] = useState(true);
	const { setVisible, bindings } = useModal();

	const handleCreatePost = (open: boolean) => {
       if(open){
            isMobile ? setOpenBottomDrawer(true) : setVisible(true);
        } else {
            isMobile ? setOpenBottomDrawer(false) : setVisible(false);
        }
    };

	useEffect(() => {
		if (
			/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(
				navigator.userAgent
			)
		) {
			setIsMobile(true);
		} else {
			setIsMobile(false);
		}
	}, []);

	return (
		<>
			<Head>
				<title>Create Next App</title>
				<meta name='description' content='Generated by create next app' />
				<meta name='viewport' content='width=device-width, initial-scale=1' />
				<link rel='icon' href='/favicon.ico' />
			</Head>
			<Parent>
				<div className='fixed-header'>
					<Tabs />
				</div>
				<div className='scroll-container'>
					{DummyFeedList.map((item) => (
						<Fragment key={item.id}>
							<TravelPostCard {...item} />
						</Fragment>
					))}
				</div>
				<div className='add' onClick={() => handleCreatePost(true)}>
					<AddIcon />
				</div>

				<Modal
					scroll
					width='600px'
					aria-labelledby='modal-title'
					aria-describedby='modal-description'
					{...bindings}
				>
					<Modal.Body>
						<CreatePost closeDrawer={() => handleCreatePost(false)} />
					</Modal.Body>
				</Modal>

				<BottomDrawer id='post-drawer' open={openBottomDrawer}>
					<CreatePost closeDrawer={() =>  handleCreatePost(false)} />
				</BottomDrawer>
			</Parent>
		</>
	);
}
const Parent = styled.div`
	height: 100%;
	width: 100%;
	max-width: 850px;
	margin: 0 auto;
	position: relative;
	background: #f5f5f5;
	.scroll-container {
		display: flex;
		flex-direction: column;
		gap: 1rem;
		padding: 80px 2rem 2rem 2rem;
		background: #f5f5f5;
	}
	.fixed-header {
		position: fixed;
		width: 100%;
		max-width: 850px;
		margin: 0 auto;
		top: 0;
	}
	.add {
		position: fixed;
		display: flex;
		align-items: center;
		justify-content: center;
		border-radius: 50%;
		height: 60px;
		width: 60px;
		background: #42c2ff;
		bottom: 2%;
		right: 5%;
		z-index: 1000;
	}
`;
